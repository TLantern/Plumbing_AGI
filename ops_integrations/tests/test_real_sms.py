#!/usr/bin/env python3
"""
Real SMS test with actual ClickSend and ChatGPT APIs
"""
import os
import sys
from datetime import datetime
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv('../.env')

def test_real_sms_with_gpt():
    """Test the SMS system with real ClickSend and ChatGPT APIs."""
    print("🚀 Real SMS Test with ClickSend + ChatGPT\n")
    
    # Check for real environment variables
    required_vars = [
        'CLICKSEND_USERNAME',
        'CLICKSEND_API_KEY',
        'OPENAI_API_KEY'
    ]
    
    missing_vars = []
    for var in required_vars:
        if not os.getenv(var):
            missing_vars.append(var)
    
    if missing_vars:
        print("❌ Missing required environment variables:")
        for var in missing_vars:
            print(f"   - {var}")
        print("\n📋 Please set these environment variables:")
        print("   export CLICKSEND_USERNAME='your_clicksend_username'")
        print("   export CLICKSEND_API_KEY='your_clicksend_api_key'")
        print("   export OPENAI_API_KEY='your_openai_key'")
        return False
    
    print("✅ All environment variables found!")
    print(f"   ClickSend Username: {os.getenv('CLICKSEND_USERNAME')}")
    print(f"   OpenAI Key: {os.getenv('OPENAI_API_KEY')[:10]}...")
    
    # Test phone number (you can change this to your actual number)
    test_phone = input("\n📱 Enter phone number to test (format: +1234567890): ").strip()
    if not test_phone:
        print("❌ No phone number provided. Exiting.")
        return False
    
    try:
        from adapters.sms import SMSAdapter
        
        # Initialize real SMS adapter
        sms = SMSAdapter()
        
        if not sms.enabled:
            print("❌ SMS adapter not enabled. Check your ClickSend credentials.")
            return False
        
        print(f"✅ SMS adapter initialized successfully!")
        
        # Test messages to send
        test_messages = [
            "my pipe just burst and there's water everywhere!",
            "my toilet won't flush and it's backing up", 
            "I have a dripping faucet in my kitchen",
            "how much would it cost to replace my toilet?"
        ]
        
        print(f"\n📝 Testing {len(test_messages)} messages with real APIs:")
        print("=" * 60)
        
        for i, message in enumerate(test_messages, 1):
            print(f"\n{i}. Testing message: '{message}'")
            print(f"   📱 Sending to: {test_phone}")
            
            # Use the real handle_incoming_message method
            result = sms.handle_incoming_message(test_phone, message)
            
            if result.get('success'):
                print(f"   ✅ SMS sent successfully!")
                print(f"   🎯 Intent: {result.get('intent_tag', 'Unknown')}")
                print(f"   📄 Raw Response: {result.get('raw_response', 'N/A')}")
            else:
                print(f"   ❌ SMS failed: {result.get('error', 'Unknown error')}")
            
            # Wait a bit between messages
            if i < len(test_messages):
                print("   ⏳ Waiting 3 seconds before next message...")
                import time
                time.sleep(3)
        
        print("\n" + "=" * 60)
        print("✅ Real SMS test completed!")
        print(f"📱 Check your phone ({test_phone}) for the messages.")
        print("\n📋 What happened:")
        print("1. Each message was classified by ChatGPT")
        print("2. Contextual responses were generated by GPT")
        print("3. Real SMS messages were sent via ClickSend")
        print("4. You should have received 4 different messages")
        
        return True
        
    except Exception as e:
        print(f"❌ Error during real SMS test: {e}")
        return False


def test_single_message():
    """Test a single custom message."""
    print("🎯 Single Message Test\n")
    
    # Check environment variables
    if not os.getenv('CLICKSEND_USERNAME') or not os.getenv('CLICKSEND_API_KEY') or not os.getenv('OPENAI_API_KEY'):
        print("❌ Please set CLICKSEND_USERNAME, CLICKSEND_API_KEY and OPENAI_API_KEY first.")
        return False
    
    test_phone = input("📱 Enter phone number: ").strip()
    if not test_phone:
        print("❌ No phone number provided.")
        return False
    
    custom_message = input("💬 Enter your message: ").strip()
    if not custom_message:
        print("❌ No message provided.")
        return False
    
    try:
        from adapters.sms import SMSAdapter
        
        sms = SMSAdapter()
        print(f"📤 Sending: '{custom_message}' to {test_phone}")
        
        result = sms.handle_incoming_message(test_phone, custom_message)
        
        if result.get('success'):
            print(f"✅ Success! Intent: {result.get('intent_tag')}")
            print(f"📱 Check your phone for the response.")
        else:
            print(f"❌ Failed: {result.get('error')}")
            
    except Exception as e:
        print(f"❌ Error: {e}")


def main():
    """Main menu for testing options."""
    print("🔧 SMS Intent Classification - Real API Testing\n")
    
    while True:
        print("\nChoose an option:")
        print("1. Test with predefined messages (real ClickSend + ChatGPT)")
        print("2. Test with custom message")
        print("3. Exit")
        
        choice = input("\nEnter choice (1-3): ").strip()
        
        if choice == "1":
            test_real_sms_with_gpt()
        elif choice == "2":
            test_single_message()
        elif choice == "3":
            print("👋 Goodbye!")
            break
        else:
            print("❌ Invalid choice. Please try again.")

if __name__ == "__main__":
    main() 